# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Tests and Build Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Set environment variables
      run: | 
        echo "TEST_DB=${{ secrets.TEST_DB }}" >> $GITHUB_ENV
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
        echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> $GITHUB_ENV
        echo "JWT_COOKIE_EXPIRES_IN=${{secrets.JWT_COOKIE_EXPIRES_IN}}" >> $GITHUB_ENV
        echo "EMAIL_FROM=${{ secrets.EMAIL_FROM }}" >> $GITHUB_ENV
        echo "EMAIL_PORT=${{ secrets.EMAIL_PORT}}" >> $GITHUB_ENV
        echo "EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}" >> $GITHUB_ENV
        echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> $GITHUB_ENV
        echo "EMAIL_HOST=${{ secrets.EMAIL_HOST}}" >> $GITHUB_ENV


    - name: Install dependencies
      run: npm install

    - name: Run tests
      env: 
        NODE_ENV: test
        TEST_DB: ${{ secrets.TEST_DB }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
        JWT_COOKIE_EXPIRES_IN: ${{ secrets.JWT_COOKIE_EXPIRES_IN }}
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
        EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_HOST: ${{ secrets.EMAIL_HOST }}

      run: npm test

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name : Login to docker hub
      uses: docker/login-action@v3
      with: 
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN}}

    - name: Build and push
      uses: docker/build-push-action@v6
      with: 
        push: true
        tags: ryankaleligabriel/bookify-api-${{ github.sha }}:latest

  deploy:
   runs-on: ubuntu-latest
   needs: build
   steps:
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.MY_RENDER_SERVICE_ID }}
          api-key: ${{ secrets.MY_RENDER_API_KEY }}
          wait-for-success: true

